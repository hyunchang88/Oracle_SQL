SELECT *
FROM EMPLOYEE;

SELECT EMP_NAME,
			SALARY*12,
			(SALARY+( SALARY*BONUS_PCT) )*12
FROM 	EMPLOYEE;

SELECT EMP_NAME AS 이름,
			SALARY*12 AS "1년 급여",
			( SALARY+( SALARY+BONUS_PCT))*12 AS 총소득
FROM 	EMPLOYEE;

SELECT EMP_ID,
			EMP_NAME,
			'재직' AS 근무여부
FROM	EMPLOYEE;

SELECT DISTINCT DEPT_ID
FROM	EMPLOYEE;

SELECT DISTINCT JOB_ID, DEPT_ID
FROM	EMPLOYEE;

SELECT EMP_NAME AS 이름,
			DEPT_ID AS 부서
FROM 	EMPLOYEE
WHERE	DEPT_ID = '90';

SELECT	EMP_NAME AS 이름,
			SALARY AS 급여
FROM	EMPLOYEE
WHERE	SALARY > 4000000;

SELECT	EMP_NAME AS 이름,
			DEPT_ID AS 부서,
			SALARY AS 급여
FROM	EMPLOYEE
WHERE	DEPT_ID = '90'
AND 		SALARY > 2000000;

SELECT	EMP_NAME AS 이름,
			DEPT_ID AS 부서,
			SALARY AS 급여
FROM	EMPLOYEE
WHERE	DEPT_ID = '90'
OR 		DEPT_ID = '20';

SELECT EMP_ID||EMP_NAME||SALARY
FROM	EMPLOYEE;

SELECT EMP_NAME||' 의 월급은 '||SALARY||' 원 입니다.'
FROM	EMPLOYEE;

SELECT EMP_NAME,
			SALARY
FROM	EMPLOYEE
WHERE	SALARY BETWEEN 3500000 AND 5500000;

SELECT EMP_NAME,
			SALARY
FROM	EMPLOYEE
WHERE	SALARY >= 3500000
AND		SALARY <= 5500000;

SELECT EMP_NAME, SALARY
FROM 	EMPLOYEE
WHERE	EMP_NAME LIKE '김%';

SELECT EMP_NAME, PHONE
FROM 	EMPLOYEE
WHERE	PHONE LIKE '___9_______';

SELECT EMP_NAME,
			EMAIL
FROM	EMPLOYEE
WHERE	EMAIL LIKE '___\_%' ESCAPE '\';

SELECT EMP_NAME,
			EMAIL
FROM	EMPLOYEE
WHERE	EMAIL LIKE '___#_%' ESCAPE '#';

SELECT * FROM JOB;

SELECT * FROM EMPLOYEE;

SELECT EMP_NAME, MGR_ID, DEPT_ID
FROM 	EMPLOYEE
WHERE	MGR_ID IS NULL
AND		DEPT_ID IS NULL;

SELECT EMP_NAME, MGR_ID, BONUS_PCT
FROM 	EMPLOYEE
WHERE	MGR_ID IS NULL
AND		BONUS_PCT IS NOT NULL;

SELECT EMP_NAME, DEPT_ID, SALARY
FROM 	EMPLOYEE
WHERE	DEPT_ID IN ( '60', '90' );

SELECT EMP_NAME, DEPT_ID, SALARY
FROM 	EMPLOYEE
WHERE	DEPT_ID = '60' 
OR		DEPT_ID = '90';

SELECT EMP_NAME, DEPT_ID, SALARY
FROM 	EMPLOYEE
WHERE	DEPT_ID = 60 
OR		DEPT_ID = 90;

SELECT EMP_NAME, SALARY, DEPT_ID
FROM 	EMPLOYEE
WHERE	DEPT_ID = '20'
OR		DEPT_ID = '90'
AND 		SALARY > 3000000;

SELECT EMP_NAME, SALARY, DEPT_ID
FROM 	EMPLOYEE
WHERE	( DEPT_ID = '20'
OR		DEPT_ID = '90' )
AND 		SALARY > 3000000;

/*
1. 춘 기술대학교의 학과 이름과 계열을 표시하시오. 단, 출력 헤더는 "학과 명", "계열"
으로 표시하도록 한다.
 */
SELECT DEPARTMENT_NAME AS "학과 명",
			CATEGORY AS 계열
FROM	TB_DEPARTMENT;

/*
2. 학과의 학과 정원을 다음과 같은 형태로 화면에 출력핚다.
 */
SELECT	DEPARTMENT_NAME||'의 정원은'||CAPACITY||'명 입니다.' AS "학과별 정원"
FROM	TB_DEPARTMENT;


SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_STUDENT;
/*
3. "국어국문학과" 에 다니는 여학생 중 현재 휴학중인 여학생을 찾아달라는 요청이
들어왔다. 누구인가? (국문학과의 '학과코드'는 학과 테이블(TB_DEPARTMENT)을 조회해서
찾아 내도록 하자)
 */
SELECT STUDENT_NAME, STUDENT_SSN
FROM	TB_STUDENT
WHERE	DEPARTMENT_NO = '001'
AND		ABSENCE_YN = 'Y'
AND		STUDENT_SSN LIKE '_______2%';

/*
4. 도서관에서 대출 도서 장기 연체자 들을 찾아 이름을 게시하고자 핚다. 그 대상자들의
학번이 다음과 같을 때 대상자들을 찾는 적절한 SQL 구문을 작성하시오.
 */
SELECT STUDENT_NAME
FROM	TB_STUDENT
WHERE	STUDENT_NO IN ('A513079', 'A513090', 'A513091', 'A513110', 'A513119');

/*
5. 입학정원이 20 명 이상 30 명 이하인 학과들의 학과 이름과 계열을 출력하시오.
 */
SELECT DEPARTMENT_NAME, CATEGORY
FROM	TB_DEPARTMENT
WHERE	CAPACITY BETWEEN 20 AND 30;

SELECT * FROM TB_PROFESSOR;
/*
6. 춘 기술대학교는 총장을 제외하고 모든 교수들이 소속 학과를 가지고 있다. 그럼 춘
기술대학교 총장의 이름을 알아낼 수 있는 SQL 문장을 작성하시오.
 */
SELECT PROFESSOR_NAME
FROM	TB_PROFESSOR
WHERE	DEPARTMENT_NO IS NULL;

SELECT * FROM TB_STUDENT;
/*
7. 혹시 전산상의 착오로 학과가 지정되어 있지 않은 학생이 있는지 확인하고자 한다.
어떠한 SQL 문장을 사용하면 될 것인지 작성하시오.
 */
SELECT STUDENT_NAME
FROM	TB_STUDENT
WHERE	DEPARTMENT_NO IS NULL;

SELECT * FROM TB_CLASS;
/*
8. 수강신청을 하려고 핚다. 선수과목 여부를 확인해야 하는데, 선수과목이 존재하는
과목들은 어떤 과목인지 과목번호를 조회해보시오.
 */
SELECT CLASS_NO
FROM 	TB_CLASS
WHERE	PREATTENDING_CLASS_NO IS NOT NULL;

SELECT * FROM TB_DEPARTMENT;
/*
9. 춘 대학에는 어떤 계열(CATEGORY)들이 있는지 조회해보시오.
 */
SELECT DISTINCT CATEGORY
FROM	TB_DEPARTMENT;

SELECT * FROM TB_STUDENT;
/*
10. 02 학번 전주 거주자들의 모임을 만들려고 핚다. 휴학한 사람들은 제외한 재학중인
학생들의 학번, 이름, 주민번호를 출력하는 구문을 작성하시오.

ENTRANCE_DATE 형식이 00/00/00 (연도/월/일) 이렇게 됌
 */
SELECT 	STUDENT_NO, STUDENT_NAME, STUDENT_SSN 
FROM   	TB_STUDENT
WHERE 	ENTRANCE_DATE LIKE '02%'
AND    	ABSENCE_YN = 'N'
AND    	STUDENT_ADDRESS LIKE '%전주%';




SELECT LENGTH(CHARTYPE),
			LENGTH(VARCHARTYPE)
FROM	COLUMN_LENGTH;

SELECT EMAIL,
			INSTR( EMAIL, 'c', -1, 2 ) 위치
FROM 	EMPLOYEE;

SELECT EMAIL,
			INSTR( EMAIL, 'c', INSTR( EMAIL, '.' )-1 ) 위치
FROM 	EMPLOYEE;

SELECT EMAIL AS 원본데이터,
			LENGTH(EMAIL) AS 원본길이,
			RPAD(EMAIL, 20) AS 적용결과,
			LENGTH(LPAD(EMAIL, 20, ',')) AS 결과길이
FROM	EMPLOYEE;

SELECT LTRIM ('   tech') FROM DUAL;
SELECT LTRIM ('   tech', ' ') FROM DUAL;
SELECT LTRIM ('000123', '0') FROM DUAL;
SELECT LTRIM ('123123Tech123', '123') FROM DUAL;
SELECT LTRIM ('xyxzyyyTech123', 'xyz') FROM DUAL;
SELECT LTRIM ('6372Tech', '0123456789') FROM DUAL;

SELECT TRIM ('  tech  ') FROM DUAL;
SELECT TRIM ('a' FROM 'aatechaaa') FROM DUAL;
SELECT TRIM (LEADING '0' FROM '000123') FROM DUAL;
SELECT TRIM (TRAILING '1' FROM 'Teach1') FROM DUAL;
SELECT TRIM (BOTH '1' FROM '123Teach111') FROM DUAL;
SELECT TRIM (LEADING FROM '   teach  ') FROM DUAL;

SELECT SUBSTR ('This is a test', 6, 2) FROM DUAL;
SELECT SUBSTR ('This is a test', 6) FROM DUAL;
SELECT SUBSTR ('이것은 연습입니다', 3, 4) FROM DUAL;
SELECT SUBSTR ('TechOnTheNet', 1, 4) FROM DUAL;
SELECT SUBSTR ('TechOnTheNet', -3, 3) FROM DUAL;
SELECT SUBSTR ('TechOnTheNet', -6, 3) FROM DUAL;
SELECT SUBSTR ('TechOnTheNet', -8, 2) FROM DUAL;

SELECT * FROM EMPLOYEE;

SELECT EMP_NAME AS 이름,
			SUBSTR(HIRE_DATE,1,2)||' 년 '||
			SUBSTR(HIRE_DATE,4,2)||' 월 '||
			SUBSTR(HIRE_DATE,7,2)||' 일 ' AS 입사일
FROM 	EMPLOYEE
WHERE	JOB_ID = 'J7';

SELECT ROUND(125.315) FROM DUAL;
SELECT ROUND(125.315, 0) FROM DUAL;
SELECT ROUND(125.315, 1) FROM DUAL;
SELECT ROUND(125.315, -1) FROM DUAL;
SELECT ROUND(125.315, 3) FROM DUAL;
SELECT ROUND(-125.315, 2) FROM DUAL;

SELECT TRUNC(125.315) FROM DUAL;
SELECT TRUNC(125.315, 0) FROM DUAL;
SELECT TRUNC(125.315, 1) FROM DUAL;
SELECT TRUNC(125.315, -1) FROM DUAL;
SELECT TRUNC(125.315, 3) FROM DUAL;
SELECT TRUNC(-125.315, 2) FROM DUAL;

SELECT SYSDATE FROM DUAL;

SELECT EMP_NAME,
			HIRE_DATE,
			ADD_MONTHS( HIRE_DATE, 240)
FROM	EMPLOYEE;

SELECT EMP_NAME,
			HIRE_DATE,
			MONTHS_BETWEEN('10/01/01', HIRE_DATE)/12 AS 근무년수
FROM	EMPLOYEE
WHERE	MONTHS_BETWEEN('10/01/01', HIRE_DATE) > 120;

SELECT EMP_NAME,
			HIRE_DATE,
			TRUNC(MONTHS_BETWEEN('10/01/01', HIRE_DATE)/12, 1) AS 근무년수
FROM	EMPLOYEE
WHERE	MONTHS_BETWEEN('10/01/01', HIRE_DATE) > 120;